### DB 값 전체 초기화
GET http://localhost:9090/init

### 유저 signup : 이메일 이름 패스워드로 유저 등록 한다.
POST http://localhost:9090/users/signup
Content-Type: application/json

{
  "email":"1@gg.gg"
  ,"name":"1gg"
  ,"password":"1234"
}
### 유저 login : signup 된 유저 이메일과 패스워드로 로그인 한다.
POST http://localhost:9090/users/login
Content-Type: application/json

{
  "email":"1@gg.gg"
  ,"password":"1234"
}

> {% client.global.set("access_token", response.body.access_token); %}

### 유저 me(GET) : Bearer token이랑 같이 요청 시 해당 유저 정보의 값을 준다.
GET http://localhost:9090/users/me
Authorization: Bearer {{access_token}}

### 유저 me(PUT) : Bearer token으로 인증된 유저의 이름 혹은 비밀번호를 변경한다. 예제는 이름
PUT http://localhost:9090/users/me
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "name":"변경이름"
}

### 유저 me(DELETE) : Bearer token으로 인증된 현재 유저 삭제 한다.
DELETE http://localhost:9090/users/me
Authorization: Bearer {{access_token}}

### todos(POST) : TODO 등록. 인증된 유저(Bearer토큰)만 등록이 가능하다.
POST http://localhost:9090/todos
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
    "title": "title2"
    ,"content" :"content2"
}

### todos(GET) : 등록된 TODO 리스트 조회. (자신이 등록한 todo만 조회 가능하다.)
GET http://localhost:9090/todos
Authorization: Bearer {{access_token}}


### todos id(GET) : 등록된 TODO 단일 조회. (자신이 등록한 todo만 조회 가능하다.)
@todoId=1
GET http://localhost:9090/todos/{{todoId}}
Authorization: Bearer {{access_token}}

### todos id(PUT) : 등록된 TODO 단일 수정. (자신이 등록한 todo만 수정 가능하다.)
PUT http://localhost:9090/todos/{{todoId}}
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
    "title": "title2"
    ,"content" :"content2"
}

### todos id(PUT) : 등록된 TODO 단일 수정. (자신이 등록한 todo만 수정 가능하다.)
DELETE http://localhost:9090/todos/{{todoId}}
Authorization: Bearer {{access_token}}
Content-Type: application/json

{
  "title": "title2"
,"content" :"content2"
}